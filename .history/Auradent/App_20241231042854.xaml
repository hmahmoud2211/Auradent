<Application x:Class="Auradent.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Auradent"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:usercontrol="clr-namespace:Auradent.View.Usercontrols"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="lvc:LineSeries">
                <Setter Property="StrokeThickness"
                        Value="3"></Setter>
                <Setter Property="Stroke"
                        Value="White"></Setter>
                <Setter Property="Fill"
                        Value="#4EFFFFFF"></Setter>
                <Setter Property="PointGeometrySize"
                        Value="0"></Setter>
                <Setter Property="LineSmoothness"
                        Value="0"></Setter>
            </Style>
            <Style TargetType="lvc:Axis">
                <Setter Property="ShowLabels"
                        Value="False"></Setter>
                <Setter Property="IsEnabled"
                        Value="False"></Setter>
            </Style>
            <Style x:Key="menuButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#787c86"/>
                <Setter Property="Width"
                        Value="45"/>
                <Setter Property="Height"
                        Value="45"/>
                <Setter Property="Margin"
                        Value="0 15 0 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#787c86"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButtonTop"
                    TargetType="Button"
                    BasedOn="{StaticResource menuButton}">
                <Setter Property="Background"
                        Value="#ffffff"/>
                <Setter Property="VerticalAlignment"
                        Value="Top"/>
                <Setter Property="Width"
                        Value="45"/>
                <Setter Property="Height"
                        Value="45"/>
                <Setter Property="Margin"
                        Value="0 20 0 0"/>
            </Style>

            <Style x:Key="MenuButtonIcon"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Width"
                        Value="18"/>
                <Setter Property="Height"
                        Value="18"/>
                <Setter Property="Foreground"
                        Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
            </Style>

            <Style x:Key="infoTitle"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="FontSize"
                        Value="28"/>
                <Setter Property="TextAlignment"
                        Value="Center"/>
            </Style>

            <Style x:Key="infoText"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#979ca7"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="TextAlignment"
                        Value="Center"/>
                <Setter Property="Margin"
                        Value="0 5 0 5"/>
            </Style>

            <Style x:Key="pinkButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#ff869e"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="Width"
                        Value="230"/>
                <Setter Property="Height"
                        Value="50"/>
                <Setter Property="Margin"
                        Value="0 -25 0 0"/>
                <Setter Property="FontSize"
                        Value="16"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="VerticalAlignment"
                        Value="top"/>
                <Setter Property="Grid.Row"
                        Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="25">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#fc6583"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="title"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#2f394e"/>
                <Setter Property="FontSize"
                        Value="22"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
            </Style>

            <Style x:Key="desc"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#b1b1b1"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="Margin"
                        Value="0 5 0 0"/>
            </Style>


            <Style x:Key="whiteButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#9ca2b3"/>
                <Setter Property="Height"
                        Value="40"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="25">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#dfdfdf"/>
                        <Setter Property="Foreground"
                                Value="#666666"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="button"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#BABABA"/>
                <Setter Property="FontSize"
                        Value="22"/>
                <Setter Property="Margin"
                        Value="12 0"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Foreground"
                                Value="#20415C"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Foreground"
                                Value="#20415C"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="angle"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Foreground"
                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                <Setter Property="Width"
                        Value="13"/>
                <Setter Property="Height"
                        Value="13"/>
                <Setter Property="Margin"
                        Value="0 3 0 0"/>
            </Style>


            <Style x:Key="buttonBig"
                    TargetType="Button"
                    BasedOn="{StaticResource button}">
                <Setter Property="Foreground"
                        Value="#759DC0"/>
            </Style>


            <Style x:Key="angleBig"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Foreground"
                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                <Setter Property="Width"
                        Value="25"/>
                <Setter Property="Height"
                        Value="25"/>
            </Style>


            <Style x:Key="buttonMonth"
                    TargetType="Button"
                    BasedOn="{StaticResource button}">
                <Setter Property="FontSize"
                        Value="18"/>
            </Style>


            <Style x:Key="textHint"
                    TargetType="TextBlock">
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="Grid.Column"
                        Value="1"/>
                <Setter Property="Panel.ZIndex"
                        Value="1"/>
                <Setter Property="Margin"
                        Value="10 0 0 0"/>
                <Setter Property="Foreground"
                        Value="#759DC0"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
            </Style>


            <Style x:Key="textBox"
                    TargetType="TextBox">
                <Setter Property="Background"
                        Value="#759DC0"/>
                <Setter Property="Foreground"
                        Value="#759DC0"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="Grid.Column"
                        Value="1"/>
                <Setter Property="Margin"
                        Value="10 0 0 0"/>
                <Setter Property="BorderBrush"
                        Value="Transparent"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
            </Style>


            <Style x:Key="CalendarStyle1"
                    TargetType="{x:Type Calendar}">
                <Setter Property="Foreground"
                        Value="#FF333333"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Width"
                        Value="600"/>
                <Setter Property="Height"
                        Value="600"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <StackPanel x:Name="PART_Root"
                                    HorizontalAlignment="Center">
                                <CalendarItem x:Name="PART_CalendarItem"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Style="{TemplateBinding CalendarItemStyle}"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="CalendarCalendarItemStyle1"
                    TargetType="{x:Type CalendarItem}">
                <Setter Property="Margin"
                        Value="0,3,0,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CalendarItem}">
                            <ControlTemplate.Resources>
                                <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                                    <TextBlock FontWeight="SemiBold"
                                            FontFamily="Trebuchet MS"
                                            Foreground="#FF333333"
                                            FontSize="18"
                                            HorizontalAlignment="Center"
                                            Margin="10"
                                            Text="{Binding}"
                                            VerticalAlignment="Center"/>
                                </DataTemplate>
                            </ControlTemplate.Resources>

                            <Grid x:Name="PART_Root">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledColor"
                                            Color="#A5FFFFFF"/>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="PART_DisabledVisual"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="1">
                                    <Border>
                                        <Grid>
                                            <Button x:Name="PART_PreviousButton"
                                                    Visibility="Collapsed"/>
                                            <Button x:Name="PART_HeaderButton"
                                                    Visibility="Collapsed"/>
                                            <Button x:Name="PART_NextButton"
                                                    Visibility="Collapsed"/>

                                            <Grid x:Name="PART_MonthView"
                                                    Visibility="Visible">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                            </Grid>
                                            <Grid x:Name="PART_YearView"
                                                    Visibility="Hidden">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Rectangle x:Name="PART_DisabledVisual"
                                        Fill="{StaticResource DisabledColor}"
                                        Opacity="0"
                                        RadiusX="2"
                                        RadiusY="2"
                                        StrokeThickness="1"
                                        Stretch="Fill"
                                        Stroke="{StaticResource DisabledColor}"
                                        Visibility="Collapsed"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                        Value="False">
                                    <Setter Property="Visibility"
                                            TargetName="PART_DisabledVisual"
                                            Value="Visible"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                                        Value="Year">
                                    <Setter Property="Visibility"
                                            TargetName="PART_MonthView"
                                            Value="Hidden"/>
                                    <Setter Property="Visibility"
                                            TargetName="PART_YearView"
                                            Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                                        Value="Decade">
                                    <Setter Property="Visibility"
                                            TargetName="PART_MonthView"
                                            Value="Hidden"/>
                                    <Setter Property="Visibility"
                                            TargetName="PART_YearView"
                                            Value="Visible"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="CalendarCalendarDayButtonStyle1"
                    TargetType="{x:Type CalendarDayButton}">
                <Setter Property="Width"
                        Value="80"/>
                <Setter Property="Height"
                        Value="80"/>
                <Setter Property="FontSize"
                        Value="18"/>
                <Setter Property="Margin"
                        Value="5"/>
                <Setter Property="Cursor"
                        Value="Hand"/>
                <Setter Property="HorizontalContentAlignment"
                        Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                        Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.1"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="HighlightBackground"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.5"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="HighlightBackground"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.5"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="HighlightBackground"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0"/>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To=".35"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="SelectedBackground"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To=".9"/>
                                                <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="#FFFFFF"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="CalendarButtonFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                        Storyboard.TargetName="DayButtonFocusVisual"
                                                        Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CalendarButtonUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                        Storyboard.TargetName="DayButtonFocusVisual"
                                                        Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ActiveStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Active"/>
                                        <VisualState x:Name="Inactive">
                                            <Storyboard>
                                                <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="#BABABA"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DayStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="RegularDay"/>
                                        <VisualState x:Name="Today">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="TodayBackground"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="1"/>
                                                <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="#FFFFFFFF"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="BlackoutDayStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NormalDay"/>
                                        <VisualState x:Name="BlackoutDay">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                        Storyboard.TargetName="Blackout"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To=".2"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="TodayBackground"
                                        Fill="#759DC0"
                                        Opacity="0"
                                        RadiusX="30"
                                        RadiusY="30"/>
                                <Rectangle x:Name="SelectedBackground"
                                        Fill="#759DC0"
                                        Opacity="0"
                                        RadiusX="30"
                                        RadiusY="30"/>
                                <Border Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"/>
                                <Rectangle x:Name="HighlightBackground"
                                        Fill="#c1c1c1"
                                        Opacity="0"
                                        RadiusX="30"
                                        RadiusY="30"/>
                                <ContentPresenter x:Name="NormalText"
                                        TextElement.Foreground="#FF333333"
                                        HorizontalAlignment="Center"
                                        Margin="5 3"
                                        VerticalAlignment="Center"/>
                                <Path x:Name="Blackout"
                                        Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                                        Fill="#FF000000"
                                        HorizontalAlignment="Stretch"
                                        Margin="3"
                                        Opacity="0"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill"
                                        VerticalAlignment="Stretch"/>
                                <Rectangle x:Name="DayButtonFocusVisual"
                                        IsHitTestVisible="false"
                                        RadiusX="30"
                                        RadiusY="30"
                                        Stroke="Transparent"
                                        Visibility="Collapsed"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="menuButton2"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="Width"
                        Value="50"/>
                <Setter Property="Height"
                        Value="50"/>
                <Setter Property="Margin"
                        Value="0 5"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#5a5080"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style  x:Key="menuButtonIcon"
                    TargetType="Icon:PackIconMaterial">
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="Width"
                        Value="17"/>
                <Setter Property="Height"
                        Value="17"/>
            </Style>

            <Style x:Key="topMenuButton"
                    TargetType="Button"
                    BasedOn="{StaticResource menuButton}">
                <Setter Property="Margin"
                        Value="0 30 0 20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="15"
                                    BorderThickness="1"
                                    BorderBrush="#8a7fc7">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="titleText"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#594e7f"/>
                <Setter Property="FontSize"
                        Value="18"/>
                <Setter Property="FontWeight"
                        Value="Bold"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
            </Style>


            <Style x:Key="SearchTextBox"
                    TargetType="TextBox">
                <Setter Property="Background"
                        Value="#f3f3f3"/>
                <Setter Property="Foreground"
                        Value="#594f7f"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="FontSize"
                        Value="15"/>
                <Setter Property="Padding"
                        Value="40 13 15 13"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBoxBase">
                            <Border x:Name="border"
                                    CornerRadius="15"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="False"
                                        HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>

                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="True">
                                    <Setter Property="BorderBrush"
                                            Value="#d9d9d9"
                                            TargetName="border"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                        Value="True">
                                    <Setter Property="BorderBrush"
                                            Value="#d9d9d9"
                                            TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>


            </Style>

            <Style x:Key="dotsButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#d9d9d9"/>
                <Setter Property="Width"
                        Value="18"/>
                <Setter Property="Height"
                        Value="18"/>
                <Setter Property="Margin"
                        Value="0 10 0 0"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Foreground"
                                Value="#303030"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="cardButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#fbdfe8"/>
                <Setter Property="Foreground"
                        Value="#ea658f"/>
                <Setter Property="Width"
                        Value="90"/>
                <Setter Property="Height"
                        Value="28"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#ffebf3"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <!--#region Slider Style-->
            <Style x:Key="RepeatButtonTransparent"
                    TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Focusable"
                        Value="false"/>
                <Setter Property="IsTabStop"
                        Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"
                                    Height="{TemplateBinding Height}"
                                    Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="SliderThumb.Static.Background"
                    Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="SliderThumb.Static.Border"
                    Color="#FFACACAC"/>
            <SolidColorBrush x:Key="SliderThumb.Static.Foreground"
                    Color="#FFE5E5E5"/>
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Background"
                    Color="#FFDCECFC"/>
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Border"
                    Color="#FF7Eb4EA"/>
            <SolidColorBrush x:Key="SliderThumb.Pressed.Background"
                    Color="#FFDAECFC"/>
            <SolidColorBrush x:Key="SliderThumb.Pressed.Border"
                    Color="#FF569DE5"/>
            <SolidColorBrush x:Key="SliderThumb.Disabled.Background"
                    Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="SliderThumb.Disabled.Border"
                    Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="SliderThumb.Track.Background"
                    Color="#FFE7EAEA"/>
            <SolidColorBrush x:Key="SliderThumb.Track.Border"
                    Color="#FFD6D6D6"/>

            <ControlTemplate x:Key="SliderThumbHorizontalDefault"
                    TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center"
                        UseLayoutRounding="True"
                        VerticalAlignment="Center"/>



            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbHorizontalTop"
                    TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center"
                        UseLayoutRounding="True"
                        VerticalAlignment="Center">
                    <Path x:Name="grip"
                            Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                            Fill="{StaticResource SliderThumb.Static.Background}"
                            Stroke="{StaticResource SliderThumb.Static.Border}"
                            SnapsToDevicePixels="True"
                            Stretch="Fill"
                            StrokeThickness="1"
                            UseLayoutRounding="True"
                            VerticalAlignment="Center"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="true">
                        <Setter Property="Fill"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging"
                            Value="true">
                        <Setter Property="Fill"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled"
                            Value="false">
                        <Setter Property="Fill"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbHorizontalBottom"
                    TargetType="{x:Type Thumb}">
                <Grid HorizontalAlignment="Center"
                        UseLayoutRounding="True"
                        VerticalAlignment="Center">
                    <Path x:Name="grip"
                            Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                            Fill="{StaticResource SliderThumb.Static.Background}"
                            Stroke="{StaticResource SliderThumb.Static.Border}"
                            SnapsToDevicePixels="True"
                            Stretch="Fill"
                            StrokeThickness="1"
                            UseLayoutRounding="True"
                            VerticalAlignment="Center"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="true">
                        <Setter Property="Fill"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging"
                            Value="true">
                        <Setter Property="Fill"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled"
                            Value="false">
                        <Setter Property="Fill"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke"
                                TargetName="grip"
                                Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderHorizontal"
                    TargetType="{x:Type Slider}">
                <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"
                                    MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TickBar x:Name="TopTick"
                                Fill="{TemplateBinding Foreground}"
                                Height="4"
                                Margin="0,0,0,2"
                                Placement="Top"
                                Grid.Row="0"
                                Visibility="Collapsed"/>
                        <TickBar x:Name="BottomTick"
                                Fill="{TemplateBinding Foreground}"
                                Height="4"
                                Margin="0,2,0,0"
                                Placement="Bottom"
                                Grid.Row="2"
                                Visibility="Collapsed"/>
                        <Border x:Name="TrackBackground"
                                Background="#ebeaef"
                                CornerRadius="2"
                                BorderThickness="0"
                                Height="4.0"
                                Margin="5.5,0"
                                Grid.Row="1"
                                VerticalAlignment="center">
                            <Border x:Name="PART_SelectionRange"
                                    CornerRadius="2"
                                    Background="#00c03e"
                                    Height="4.0"
                                    Visibility="Hidden"
                                    HorizontalAlignment="Left"/>
                        </Border>
                        <Track x:Name="PART_Track"
                                Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                        Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                        Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                        Focusable="False"
                                        Height="18"
                                        OverridesDefaultStyle="True"
                                        Template="{StaticResource SliderThumbHorizontalDefault}"
                                        VerticalAlignment="Center"
                                        Width="11"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement"
                            Value="TopLeft">
                        <Setter Property="Visibility"
                                TargetName="TopTick"
                                Value="Visible"/>
                        <Setter Property="Template"
                                TargetName="Thumb"
                                Value="{StaticResource SliderThumbHorizontalTop}"/>
                        <Setter Property="Margin"
                                TargetName="TrackBackground"
                                Value="5,2,5,0"/>
                    </Trigger>
                    <Trigger Property="TickPlacement"
                            Value="BottomRight">
                        <Setter Property="Visibility"
                                TargetName="BottomTick"
                                Value="Visible"/>
                        <Setter Property="Template"
                                TargetName="Thumb"
                                Value="{StaticResource SliderThumbHorizontalBottom}"/>
                        <Setter Property="Margin"
                                TargetName="TrackBackground"
                                Value="5,0,5,2"/>
                    </Trigger>
                    <Trigger Property="TickPlacement"
                            Value="Both">
                        <Setter Property="Visibility"
                                TargetName="TopTick"
                                Value="Visible"/>
                        <Setter Property="Visibility"
                                TargetName="BottomTick"
                                Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsSelectionRangeEnabled"
                            Value="true">
                        <Setter Property="Visibility"
                                TargetName="PART_SelectionRange"
                                Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused"
                            Value="true">
                        <Setter Property="Foreground"
                                TargetName="Thumb"
                                Value="Blue"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="SliderStyle1"
                    TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled"
                        Value="false"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="BorderBrush"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="{StaticResource SliderThumb.Static.Foreground}"/>
                <Setter Property="Template"
                        Value="{StaticResource SliderHorizontal}"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>

            </Style>


            <Style x:Key="titleButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#776abd"/>
                <Setter Property="Width"
                        Value="80"/>
                <Setter Property="Height"
                        Value="30"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Margin"
                        Value="0 0 15 0"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#776abd"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="titleIcon"
                    TargetType="Icon:PackIconMaterial">

                <Setter Property="Foreground"
                        Value="#594e7f"/>
                <Setter Property="Margin"
                        Value="10 0"/>
                <Setter Property="Width"
                        Value="20"/>
                <Setter Property="Height"
                        Value="20"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
            </Style>


            <Style x:Key="tabButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#776abd"/>
                <Setter Property="Width"
                        Value="80"/>
                <Setter Property="Height"
                        Value="30"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Margin"
                        Value="0 0 15 0"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#7163ba"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>

            </Style>
            <!--New Patient-->

            <Style x:Key="buttonWhite"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="White"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Width"
                        Value="60"/>
                <Setter Property="Height"
                        Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#000000"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Background"
                                Value="#161616"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="iconApp"
                    TargetType="fa:ImageAwesome">
                <Setter Property="VerticalAlignment"
                        Value="Top"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.2"
                                        ScaleY="1.2"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="text"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#363636"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="FontSize"
                        Value="16"/>
            </Style>


            <Style TargetType="TextBox">
                <Setter Property="Background"
                        Value="#F5F7F9"/>
                <Setter Property="Foreground"
                        Value="#767676"/>
                <Setter Property="BorderThickness"
                        Value="1"/>
                <Setter Property="BorderBrush"
                        Value="#F5F7F9"/>
                <Setter Property="FontSize"
                        Value="12"/>
                <Setter Property="Padding"
                        Value="10 10"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Margin"
                        Value="0 10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border"
                                    CornerRadius="3"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <Style x:Key="buttonn"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#C6C6C6"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Width"
                        Value="40"/>
                <Setter Property="Height"
                        Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#363636"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Background"
                                Value="#161616"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="buttonMain"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#F5F7F9"/>
                <Setter Property="Foreground"
                        Value="#363636"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Height"
                        Value="50"/>
                <Setter Property="FontSize"
                        Value="16"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#c9c9c9"/>
                        <Setter Property="Foreground"
                                Value="#161616"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="buttonMainBlue"
                    TargetType="Button"
                    BasedOn="{StaticResource buttonMain}">
                <Setter Property="Background"
                        Value="#20415C"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#d7effb"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuTitle_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="Margin"
                        Value="0 0 25 0"/>
                <Setter Property="FontSize"
                        Value="16"/>
                <Setter Property="Opacity"
                        Value="0.7"/>
                <Setter Property="Foreground"
                        Value="#FFFFFF"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Opacity"
                                Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="iconApp_newdashboard"
                    TargetType="Image">
                <Setter Property="Width"
                        Value="20"/>
                <Setter Property="Height"
                        Value="20"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.1"
                                        ScaleY="1.1"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="menuButton_newdashboard"
                    TargetType="{x:Type Button}">
                <Setter Property="Margin"
                        Value="0 7 0 0"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="Width"
                        Value="100"/>
                <Setter Property="Height"
                        Value="90"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#a9a9a9"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="15"
                                    Padding="15">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#4679A3"/>
                        <Setter Property="Foreground"
                                Value="#FFFFFF"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Background"
                                Value="#4679A3"/>
                        <Setter Property="Foreground"
                                Value="#FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="menuButtonIcon_newdashboard"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Foreground"
                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                <Setter Property="Width"
                        Value="20"/>
                <Setter Property="Height"
                        Value="20"/>
            </Style>


            <Style x:Key="menuButtonText_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="Margin"
                        Value="0 7 0 0"/>
            </Style>


            <Style x:Key="infoCard_newdashboard"
                    TargetType="Border">
                <Setter Property="CornerRadius"
                        Value="15"/>
                <Setter Property="Background"
                        Value="#20415C"/>
                <Setter Property="Padding"
                        Value="10"/>
                <Setter Property="Margin"
                        Value="8 0 8 0"/>
            </Style>


            <Style x:Key="infoCardStack_newdashboard"
                    TargetType="StackPanel">
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Margin"
                        Value="20 0 0 0"/>
            </Style>


            <Style x:Key="infoCardTitle_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#e9e9e9"/>
                <Setter Property="FontSize"
                        Value="22"/>
                <Setter Property="Margin"
                        Value="0 0 0 5"/>
            </Style>


            <Style x:Key="infoCardText_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#e9e9e9"/>
                <Setter Property="Opacity"
                        Value="0.8"/>
            </Style>


            <Style x:Key="infoCardIcon_newdashboard"
                    TargetType="fa:ImageAwesome">
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="HorizontalAlignment"
                        Value="Center"/>
                <Setter Property="Foreground"
                        Value="#e0e0e0"/>
                <Setter Property="Margin"
                        Value="0 0 20 0"/>
                <Setter Property="Grid.Column"
                        Value="1"/>
                <Setter Property="Width"
                        Value="40"/>
                <Setter Property="Height"
                        Value="40"/>
            </Style>


            <Style x:Key="button_newdashboard"
                    TargetType="Button">
                <Setter Property="Height"
                        Value="40"/>
                <Setter Property="Width"
                        Value="170"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Margin"
                        Value="0 0 20 0"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    BorderBrush="#202934"
                                    Padding="15 0 15 0"
                                    BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#202934"/>
                        <Setter Property="Foreground"
                                Value="#e9e9e9"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Background"
                                Value="Black"/>
                        <Setter Property="Foreground"
                                Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="buttonIcon_newdashboard"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Foreground"
                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                <Setter Property="Width"
                        Value="18"/>
                <Setter Property="Height"
                        Value="18"/>
            </Style>


            <Style x:Key="buttonText_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="Margin"
                        Value="10 0 0 0"/>
                <Setter Property="FontSize"
                        Value="14"/>
            </Style>


            <Style x:Key="iconBar_newdashboard"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Foreground"
                        Value="#787878"/>
                <Setter Property="Width"
                        Value="18"/>
                <Setter Property="Height"
                        Value="18"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.1"
                                        ScaleY="1.1"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="socialCard_newdashboard"
                    TargetType="Border">
                <Setter Property="Background"
                        Value="#FDFDFD"/>
                <Setter Property="CornerRadius"
                        Value="15"/>
                <Setter Property="Margin"
                        Value="8 20 8 0"/>
                <Setter Property="BorderBrush"
                        Value="#dbdbdb"/>
                <Setter Property="BorderThickness"
                        Value="1"/>
            </Style>


            <Style x:Key="socialCardIconBar_newdashboard"
                    TargetType="fa:ImageAwesome"
                    BasedOn="{StaticResource iconBar_newdashboard}">
                <Setter Property="Margin"
                        Value="0 15 20 15"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
            </Style>


            <Style x:Key="socialCardStack_newdashboard"
                    TargetType="StackPanel">
                <Setter Property="Orientation"
                        Value="Horizontal"/>
                <Setter Property="HorizontalAlignment"
                        Value="Center"/>
            </Style>


            <Style x:Key="socialCardIconTitle_newdashboard"
                    TargetType="fa:ImageAwesome">
                <Setter Property="Width"
                        Value="30"/>
                <Setter Property="Height"
                        Value="30"/>
            </Style>


            <Style x:Key="socialCardTitle_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="Margin"
                        Value="10 0 0 0"/>
                <Setter Property="FontSize"
                        Value="18"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
            </Style>


            <Style x:Key="socialCardCounterTitle_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="TextAlignment"
                        Value="Center"/>
                <Setter Property="FontSize"
                        Value="48"/>
                <Setter Property="Margin"
                        Value="0 50 0 5"/>
            </Style>


            <Style x:Key="socialCardCounterText_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="TextAlignment"
                        Value="Center"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="Foreground"
                        Value="#808080"/>
            </Style>


            <Style TargetType="Separator">
                <Setter Property="Background"
                        Value="#c4c4c4"/>
                <Setter Property="Margin"
                        Value="0 60 0 15"/>
            </Style>


            <Style x:Key="socialCardBottomTitle_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="TextAlignment"
                        Value="Center"/>
                <Setter Property="FontSize"
                        Value="14"/>
                <Setter Property="Foreground"
                        Value="#808080"/>
            </Style>


            <Style x:Key="socialCardBottomText_newdashboard"
                    TargetType="TextBlock">
                <Setter Property="TextAlignment"
                        Value="Center"/>
                <Setter Property="FontSize"
                        Value="18"/>
                <Setter Property="Foreground"
                        Value="#474747"/>
                <Setter Property="Margin"
                        Value="0 5 0 0"/>
            </Style>

            <Style x:Key="textboxSearch_newdashboard"
                    TargetType="TextBox">
                <Setter Property="Background"
                        Value="#ffffff"/>
                <Setter Property="Foreground"
                        Value="#B0B9C6"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="FontSize"
                        Value="12"/>
                <Setter Property="Padding"
                        Value="15 10"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Margin"
                        Value="0 10"/>
                <!--<Setter Property="Effect" >
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="2" Opacity="0.1" ShadowDepth="1"/>
                    </Setter.Value>
                            </Setter>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border"
                                    CornerRadius="20"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    BorderBrush="#E0E6ED">
                                <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Existing Patint-->
            <Style x:Key="buttonBlack"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#363636"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Width"
                        Value="60"/>
                <Setter Property="Height"
                        Value="60"/>
                <Setter Property="Margin"
                        Value="0 20 0 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#000000"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="iconApp_m"
                    TargetType="Image">
                <Setter Property="VerticalAlignment"
                        Value="Top"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.2"
                                        ScaleY="1.2"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="text_m"
                    TargetType="TextBlock">
                <Setter Property="Foreground"
                        Value="#363636"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="FontSize"
                        Value="16"/>
            </Style>

            <Style x:Key="mytxtBox"
                    TargetType="TextBox">
                <Setter Property="Background"
                        Value="#F5F7F9"/>
                <Setter Property="Foreground"
                        Value="#767676"/>
                <Setter Property="BorderThickness"
                        Value="1"/>
                <Setter Property="BorderBrush"
                        Value="#F5F7F9"/>
                <Setter Property="FontSize"
                        Value="12"/>
                <Setter Property="Padding"
                        Value="10 10"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Margin"
                        Value="0 10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border"
                                    CornerRadius="3"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="bttn"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#C6C6C6"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Width"
                        Value="40"/>
                <Setter Property="Height"
                        Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#363636"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Background"
                                Value="#161616"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="bttnMain"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#F5F7F9"/>
                <Setter Property="Foreground"
                        Value="#363636"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="Height"
                        Value="50"/>
                <Setter Property="FontSize"
                        Value="16"/>
                <Setter Property="FontWeight"
                        Value="SemiBold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#c9c9c9"/>
                        <Setter Property="Foreground"
                                Value="#161616"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="buttonMainGreen"
                    TargetType="Button"
                    BasedOn="{StaticResource buttonMain}">
                <Setter Property="Background"
                        Value="#767676"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#767676"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="mainButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#4880FF"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="FontSize"
                        Value="16"/>
                <Setter Property="FontWeight"
                        Value="Light"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Width"
                        Value="180"/>
                <Setter Property="Height"
                        Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Margin="0 0 0 1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#3b6bd9"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="secondaryButton"
                    TargetType="Button"
                    BasedOn="{StaticResource mainButton}">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#979797"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="7"
                                    BorderThickness="0.8"
                                    BorderBrush="#b9b9b9">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Margin="0 0 0 1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#d0d0d0"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="MENOButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#88878E"/>
                <Setter Property="Width"
                        Value="30"/>
                <Setter Property="Height"
                        Value="30"/>
                <Setter Property="Margin"
                        Value="5 0 0 0"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#efefef"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}"
                    Color="#FF000000"/>
            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
                    TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Border"
                                        Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                        SnapsToDevicePixels="True"/>
                                <Polygon x:Name="Arrow"
                                        Fill="Black"
                                        HorizontalAlignment="Right"
                                        Margin="8,8,3,3"
                                        Opacity="0.15"
                                        Points="0,10 10,10 10,0"
                                        Stretch="Uniform"
                                        VerticalAlignment="Bottom"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="True">
                                    <Setter Property="Stroke"
                                            TargetName="Border"
                                            Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                        Value="True">
                                    <Setter Property="Fill"
                                            TargetName="Border"
                                            Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                        Value="False">
                                    <Setter Property="Visibility"
                                            TargetName="Arrow"
                                            Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridStyle1"
                    TargetType="{x:Type DataGrid}">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#222528"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="RowDetailsVisibilityMode"
                        Value="VisibleWhenSelected"/>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="true"/>
                <Setter Property="ScrollViewer.PanningMode"
                        Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False"/>
                <Setter Property="AutoGenerateColumns"
                        Value="False"/>
                <Setter Property="HeadersVisibility"
                        Value="Column"/>
                <Setter Property="Margin"
                        Value="0 10 0 0"/>
                <Setter Property="Grid.Row"
                        Value="5"/>
                <Setter Property="SelectionMode"
                        Value="Single"/>
                <Setter Property="SelectionUnit"
                        Value="FullRow"/>
                <Setter Property="CanUserAddRows"
                        Value="False"/>
                <Setter Property="CanUserDeleteRows"
                        Value="False"/>
                <Setter Property="CanUserReorderColumns"
                        Value="False"/>
                <Setter Property="CanUserResizeRows"
                        Value="False"/>
                <Setter Property="FontSize"
                        Value="13"/>
                <Setter Property="GridLinesVisibility"
                        Value="None"/>
                <Setter Property="ColumnWidth"
                        Value="*"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer"
                                        Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                        Focusable="false"
                                                        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                        Grid.Column="1"
                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        Grid.ColumnSpan="2"
                                                        Grid.Row="1"/>
                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                                        Grid.Column="2"
                                                        Maximum="{TemplateBinding ScrollableHeight}"
                                                        Orientation="Vertical"
                                                        Grid.Row="1"
                                                        Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                        ViewportSize="{TemplateBinding ViewportHeight}"
                                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                <Grid Grid.Column="1"
                                                        Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                            Grid.Column="1"
                                                            Maximum="{TemplateBinding ScrollableWidth}"
                                                            Orientation="Horizontal"
                                                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            ViewportSize="{TemplateBinding ViewportWidth}"
                                                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                    Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                    Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridCellStyle1"
                    TargetType="{x:Type DataGridCell}">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Margin"
                        Value="15 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                            Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin"
                            Value="True">
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected"
                                    Value="true"/>
                            <Condition Property="Selector.IsSelectionActive"
                                    Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled"
                            Value="false">
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="ColumnHeaderGripperStyle"
                    TargetType="{x:Type Thumb}">
                <Setter Property="Width"
                        Value="8"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Cursor"
                        Value="SizeWE"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridColumnHeaderStyle1"
                    TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment"
                        Value="Center"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#69717d"/>
                <Setter Property="Margin"
                        Value="15 0 15 0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <theme:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsPressed="{TemplateBinding IsPressed}"
                                        IsHovered="{TemplateBinding IsMouseOver}"
                                        IsClickable="{TemplateBinding CanUserSort}"
                                        Padding="{TemplateBinding Padding}"
                                        SortDirection="{TemplateBinding SortDirection}"
                                        SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                        SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </theme:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper"
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Thumb x:Name="PART_RightHeaderGripper"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowStyle1"
                    TargetType="{x:Type DataGridRow}">
                <Setter Property="Background"
                        Value="White"/>
                <Setter Property="Margin"
                        Value="0 4 0 0"/>
                <Setter Property="SnapsToDevicePixels"
                        Value="true"/>
                <Setter Property="Validation.ErrorTemplate"
                        Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red"
                                    Margin="2,0,0,0"
                                    Text="!"
                                    VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    Padding="0 8"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1"
                                            Grid.Row="1"
                                            SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2"
                                            SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#623ed0"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                    <Trigger Property="IsSelected"
                            Value="True">
                        <Setter Property="Background"
                                Value="#623ED0"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected"
                                    Value="true"/>
                            <Condition Property="Selector.IsSelectionActive"
                                    Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="#dfdfdf"/>
                    </MultiTrigger>

                </Style.Triggers>
            </Style>

            <!--#region Check Box Style-->
            <SolidColorBrush x:Key="OptionMark.Static.Background"
                    Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="OptionMark.Static.Border"
                    Color="#FF707070"/>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph"
                    Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background"
                    Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border"
                    Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
                    Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background"
                    Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border"
                    Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
                    Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background"
                    Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border"
                    Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
                    Color="#FF707070"/>
            <Style x:Key="CheckBoxStyle1"
                    TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Background"
                        Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush"
                        Value="#DAE2EA"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness"
                        Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot"
                                    Background="Transparent"
                                    SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        CornerRadius="3"
                                        Padding="1"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="1"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark"
                                                Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                                Fill="{StaticResource OptionMark.Static.Glyph}"
                                                Margin="1"
                                                Opacity="0"
                                                Stretch="None"/>
                                        <Rectangle x:Name="indeterminateMark"
                                                Fill="{StaticResource OptionMark.Static.Glyph}"
                                                Margin="2"
                                                Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                        Grid.Column="1"
                                        Focusable="False"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent"
                                        Value="true">
                                    <Setter Property="FocusVisualStyle"
                                            Value="{x:Null}"/>
                                    <Setter Property="Padding"
                                            Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                        Value="true">
                                    <Setter Property="Background"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush"
                                            TargetName="checkBoxBorder"
                                            Value="#9575CD"/>
                                    <Setter Property="Fill"
                                            TargetName="optionMark"
                                            Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                    <Setter Property="Fill"
                                            TargetName="indeterminateMark"
                                            Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                        Value="false">
                                    <Setter Property="Background"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Disabled.Background}"/>
                                    <Setter Property="BorderBrush"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Disabled.Border}"/>
                                    <Setter Property="Fill"
                                            TargetName="optionMark"
                                            Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    <Setter Property="Fill"
                                            TargetName="indeterminateMark"
                                            Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                        Value="true">
                                    <Setter Property="Background"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Pressed.Background}"/>
                                    <Setter Property="BorderBrush"
                                            TargetName="checkBoxBorder"
                                            Value="#9575CD"/>
                                    <Setter Property="Fill"
                                            TargetName="optionMark"
                                            Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                    <Setter Property="Fill"
                                            TargetName="indeterminateMark"
                                            Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                        Value="true">
                                    <Setter Property="Opacity"
                                            TargetName="optionMark"
                                            Value="1"/>
                                    <Setter Property="Opacity"
                                            TargetName="indeterminateMark"
                                            Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                        Value="{x:Null}">
                                    <Setter Property="Opacity"
                                            TargetName="optionMark"
                                            Value="0"/>
                                    <Setter Property="Opacity"
                                            TargetName="indeterminateMark"
                                            Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <Style x:Key="textboxSearch"
                    TargetType="TextBox">
                <Setter Property="Background"
                        Value="#ffffff"/>
                <Setter Property="Foreground"
                        Value="#B0B9C6"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="FontSize"
                        Value="12"/>
                <Setter Property="Padding"
                        Value="15 10"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Margin"
                        Value="0 10"/>
                <!--<Setter Property="Effect" >
     <Setter.Value>
         <DropShadowEffect BlurRadius="2" Opacity="0.1" ShadowDepth="1"/>
     </Setter.Value>
 </Setter>-->

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border"
                                    CornerRadius="20"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    BorderBrush="#E0E6ED">
                                <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <BooleanToVisibilityConverter x:Key="NullToVis"/>

            <Style x:Key="addButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#20415C"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Height"
                        Value="35"/>
                <Setter Property="Width"
                        Value="150"/>
                <Setter Property="Margin"
                        Value="0 20 0 0"/>
                <Setter Property="FontSize"
                        Value="13"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Setter Property="Grid.Row"
                        Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#7B5CD6"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="textboxFilter"
                    TargetType="TextBox"
                    BasedOn="{StaticResource textboxSearch}">
                <Setter Property="Padding"
                        Value="10 7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border"
                                    CornerRadius="7"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="1"
                                    BorderBrush="#E0E6ED"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                        Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="pagingButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#6C7682"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Margin"
                        Value="1 0"/>
                <Setter Property="FontSize"
                        Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    Padding="10 5">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Margin="0 0 0 1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#7950F2"/>
                        <Setter Property="Foreground"
                                Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="pagingButtonIcon"
                    TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Width"
                        Value="10"/>
                <Setter Property="Height"
                        Value="10"/>
            </Style>
            <Style x:Key="gridEditButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#512da8"/>
                <Setter Property="BorderBrush"
                        Value="#4a148c"/>
                <Setter Property="Foreground"
                        Value="#ffffff"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    Padding="5"
                                    BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#673ab7"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="gridRemoveButton"
                    TargetType="Button"
                    BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background"
                        Value="#d32f2f"/>


                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#f44336"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="gridButtonIcon"
                    TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="Width"
                        Value="12"/>
                <Setter Property="Height"
                        Value="12"/>
            </Style>
            <Style x:Key="topButton"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Foreground"
                        Value="#6E7783"/>
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}"/>
                <Setter Property="Height"
                        Value="30"/>
                <Setter Property="Width"
                        Value="30"/>
                <Setter Property="HorizontalAlignment"
                        Value="Right"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="50">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#dcdcdc"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="icon"
                    TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsMouseDirectlyOver"
                            Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.2"
                                        ScaleY="1.2"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>

            </Style>


            <Style x:Key="buttonRemove"
                    TargetType="Button">
                <Setter Property="Width"
                        Value="50"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="#ecf0f1"
                                    BorderThickness="0"
                                    Padding="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>


                </Setter>


            </Style>

            <Style x:Key="buttonBack"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="FontSize"
                        Value="16"/>
                <Setter Property="HorizontalAlignment"
                        Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    CornerRadius="3"
                                    Padding="12 7">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>


                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#e0e0e0"/>
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style x:Key="buttonCounter"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="#878382"/>
                <Setter Property="Width"
                        Value="20"/>
                <Setter Property="Height"
                        Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    CornerRadius="50"
                                    Padding="5">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#606060"/>
                    </Trigger>
                    <Trigger Property="IsMouseCaptured"
                            Value="True">
                        <Setter Property="Background"
                                Value="#303030"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="buttonClose"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="buttonMini"
                    TargetType="Button">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                            Value="True">
                        <Setter Property="Background"
                                Value="#666666"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>

    </Application.Resources>


</Application>