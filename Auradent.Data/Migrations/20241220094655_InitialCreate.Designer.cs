// <auto-generated />
using System;
using Auradent.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Auradent.Data.Migrations
{
    [DbContext(typeof(db_context))]
    [Migration("20241220094655_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Auradent.core.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AppointmentID"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AppointmentStatus")
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("AppointmentTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("DoctorandNurseID_FK")
                        .HasColumnType("int");

                    b.Property<int>("Fainance_Fk")
                        .HasColumnType("int");

                    b.Property<int>("PatientID_FK")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.HasIndex("DoctorandNurseID_FK");

                    b.HasIndex("Fainance_Fk")
                        .IsUnique();

                    b.HasIndex("PatientID_FK");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("Auradent.core.DoctorandNurse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nationa_ID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("DoctorandNurses");
                });

            modelBuilder.Entity("Auradent.core.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nationa_ID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Auradent.core.Finance", b =>
                {
                    b.Property<int>("FinanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FinanceId"));

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("FinanceId");

                    b.ToTable("Finance");
                });

            modelBuilder.Entity("Auradent.core.Medical_Record", b =>
                {
                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<string>("Assessment")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Report")
                        .HasColumnType("longtext");

                    b.Property<string>("Subjective")
                        .HasColumnType("longtext");

                    b.Property<string>("TreatmentPlan")
                        .HasColumnType("longtext");

                    b.Property<string>("objective")
                        .HasColumnType("longtext");

                    b.HasKey("RecordId");

                    b.ToTable("medical_Records");
                });

            modelBuilder.Entity("Auradent.core.Medicine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MedicineName")
                        .HasColumnType("longtext");

                    b.Property<int?>("PrescriptionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PrescriptionID");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("Auradent.core.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PatientID"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<int>("MedicalRecordID")
                        .HasColumnType("int");

                    b.Property<string>("PatientAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PatientName")
                        .HasColumnType("longtext");

                    b.Property<string>("PatientPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("chronic_diseases")
                        .HasColumnType("longtext");

                    b.HasKey("PatientID");

                    b.HasIndex("MedicalRecordID")
                        .IsUnique();

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Auradent.core.Prescription", b =>
                {
                    b.Property<int>("PrescriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrescriptionID"));

                    b.Property<int>("DoctorandNursID_FK")
                        .HasColumnType("int");

                    b.Property<string>("Doses")
                        .HasColumnType("longtext");

                    b.Property<int>("PatientID_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrescriptionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PrescriptionID");

                    b.HasIndex("DoctorandNursID_FK");

                    b.HasIndex("PatientID_FK");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("Auradent.core.RadiologyORtest", b =>
                {
                    b.Property<int>("RadiologyORtestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RadiologyORtestID"));

                    b.Property<byte[]>("Labtests")
                        .HasColumnType("longblob");

                    b.Property<int>("MedicalRecordID")
                        .HasColumnType("int");

                    b.Property<string>("Report")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Scans")
                        .HasColumnType("longblob");

                    b.HasKey("RadiologyORtestID");

                    b.ToTable("radiologyORtests");
                });

            modelBuilder.Entity("Auradent.core.Appointment", b =>
                {
                    b.HasOne("Auradent.core.DoctorandNurse", "DoctorandNurse")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorandNurseID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auradent.core.Finance", "Finance")
                        .WithOne("Appointments")
                        .HasForeignKey("Auradent.core.Appointment", "Fainance_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auradent.core.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorandNurse");

                    b.Navigation("Finance");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Auradent.core.Medical_Record", b =>
                {
                    b.HasOne("Auradent.core.RadiologyORtest", "RadiologyORtest")
                        .WithMany("Medical_Records")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RadiologyORtest");
                });

            modelBuilder.Entity("Auradent.core.Medicine", b =>
                {
                    b.HasOne("Auradent.core.Prescription", null)
                        .WithMany("Medicines")
                        .HasForeignKey("PrescriptionID");
                });

            modelBuilder.Entity("Auradent.core.Patient", b =>
                {
                    b.HasOne("Auradent.core.Medical_Record", "Medical_Record")
                        .WithOne("Patient")
                        .HasForeignKey("Auradent.core.Patient", "MedicalRecordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medical_Record");
                });

            modelBuilder.Entity("Auradent.core.Prescription", b =>
                {
                    b.HasOne("Auradent.core.DoctorandNurse", "DoctorandNurse")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorandNursID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Auradent.core.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorandNurse");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Auradent.core.DoctorandNurse", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Auradent.core.Finance", b =>
                {
                    b.Navigation("Appointments")
                        .IsRequired();
                });

            modelBuilder.Entity("Auradent.core.Medical_Record", b =>
                {
                    b.Navigation("Patient")
                        .IsRequired();
                });

            modelBuilder.Entity("Auradent.core.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Auradent.core.Prescription", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("Auradent.core.RadiologyORtest", b =>
                {
                    b.Navigation("Medical_Records");
                });
#pragma warning restore 612, 618
        }
    }
}
